#+title: Doom Emacs Config File
#+author: Naparajith T L (DrInfinite)
#+description: My Personal Doom Emacs Config
#+property: header-args :tangle config.el
#+options: toc:3

* Table Of Contents :toc:
- [[#appearance][Appearance]]
  - [[#font][Font]]
  - [[#dashboard][Dashboard]]
  - [[#theme][Theme]]
  - [[#cursor][Cursor]]
- [[#evil-mode-settings][Evil Mode Settings]]
- [[#org-mode-settings][Org Mode Settings]]
  - [[#document-settings][Document Settings]]
  - [[#keybindings][Keybindings]]
  - [[#extensions][Extensions]]
- [[#notes][Notes]]

* Appearance
** Font
Doom exposes five (optional) variables for controlling fonts in Doom:

- `doom-font' -- the primary font to use
- `doom-variable-pitch-font' -- a non-monospace font (where applicable)
- `doom-big-font' -- used for `doom-big-font-mode'; use this for
  presentations or streaming.
- `doom-symbol-font' -- for symbols
- `doom-serif-font' -- for the `fixed-pitch-serif' face

See 'C-h v doom-font' for documentation and more examples of what they accept.
For example:

Defining my system-wide font-faces

#+begin_src emacs-lisp
(setq doom-font (font-spec :family "CaskaydiaMono Nerd Font" :size 14)
      doom-variable-pitch-font (font-spec :family "Noto Sans" :size 14)
      doom-serif-font (font-spec :family "Noto Serif" :size 14)
      doom-big-font (font-spec :family "CaskaydiaMono Nerd Font" :size 24))
#+end_src

If you or Emacs can't find your font, use 'M-x describe-font' to look them up,
`M-x eval-region' to execute elisp code, and 'M-x doom/reload-font' to refresh
your font settings. If Emacs still can't find your font, it likely wasn't
installed correctly. Font issues are rarely Doom issues!

** Dashboard
Use a Custom ASCII Banner for the Dashboard with the ANSI Shadow style and Blue
ASCII Art

#+begin_src emacs-lisp
(defun doom-dashboard-draw-ascii-banner-fn ()
  (let* ((banner
          '("███████╗███╗   ██╗ █████╗ ██████╗ ███████╗"
            "██╔════╝████╗  ██║██╔══██╗██╔══██╗██╔════╝"
            "█████╗  ██╔██╗ ██║███████║██████╔╝███████╗"
            "██╔══╝  ██║╚██╗██║██╔══██║██╔═══╝ ╚════██║"
            "███████╗██║ ╚████║██║  ██║██║     ███████║"
            "╚══════╝╚═╝  ╚═══╝╚═╝  ╚═╝╚═╝     ╚══════╝"
            "                                          "
            "                 E M A C S                "))
         (longest-line (apply #'max (mapcar #'length banner))))
    (put-text-property
     (point)
     (dolist (line banner (point))
       (insert (+doom-dashboard--center
                +doom-dashboard--width
                (concat
                 line (make-string (max 0 (- longest-line (length line)))
                                   32)))
               "\n"))
     'face 'doom-dashboard-banner)))
#+end_src

#+RESULTS:
: doom-dashboard-draw-ascii-banner-fn

Setup colours to match Vim and Fastfetch

#+begin_src emacs-lisp
(custom-set-faces!
  '(doom-dashboard-banner :foreground "#89b4fa"))
#+end_src

** Theme
There are two ways to load a theme. Both assume the theme is installed and
available. You can either set `doom-theme' or manually load a theme with the
`load-theme' function. This is the default: (setq doom-theme 'doom-one)

Set global theme based on installed packages

#+begin_src emacs-lisp
(setq doom-theme 'catppuccin)
(setq catppuccin-flavor 'mocha) ;; can be 'latte, 'frappe, 'macchiato, or 'mocha
#+end_src

** Cursor
Set the cursor as a block cursor for insert mode

#+begin_src emacs-lisp
(setq-default cursor-type 'box)
(setq evil-insert-state-cursor 'box)
#+end_src

* Evil Mode Settings
This determines the style of line numbers in effect. If set to `nil', line
numbers are disabled. For relative line numbers, set this to `relative'.

Enable relative line numbers

#+begin_src emacs-lisp
(setq display-line-numbers-type 'relative)
#+end_src

Enable coloured column at 80 characters

#+begin_src emacs-lisp
(setq-default fill-column 80)
(add-hook 'prog-mode-hook #'display-fill-column-indicator-mode)
#+end_src

* Org Mode Settings
If you use 'org' and don't want your org files in the default location below,
change 'org-directory'. It must be set before org loads!

#+begin_src emacs-lisp
(setq org-directory "~/Documents/org/")
#+end_src

** Document Settings

*** Formatting

**** Hide Formatting Characters

Hide formatting/emphasis characters used for rich text formatting

#+begin_src emacs-lisp
(setq org-hide-emphasis-markers t)
(add-hook 'org-mode-hook 'org-indent-mode)
#+end_src

*** Metadata Settings

**** Variable Sizes

#+begin_src emacs-lisp
(custom-set-faces
 '(org-document-title ((t (:inherit default :height 1.75))))
 '(org-document-info ((t (:inherit default :height 1.3 :weight semibold))))
 '(org-document-info-keyword ((t (:inherit default :height 1.2 :weight medium))))
 )
#+end_src

*** Headline Settings

**** Dynamic Numbering

Automatically number headlines based on level and count

#+begin_src emacs-lisp
(setq org-startup-numerated t)
#+end_src

**** Variable Sizes

Set different font sizes for the headlines within org-mode

#+begin_src emacs-lisp
(custom-set-faces
 '(org-level-1 ((t (:inherit default :height 1.6))))
 '(org-level-2 ((t (:inherit default :height 1.5))))
 '(org-level-3 ((t (:inherit default :height 1.4))))
 '(org-level-4 ((t (:inherit default :height 1.3))))
 '(org-level-5 ((t (:inherit default :height 1.2))))
 '(org-level-6 ((t (:inherit default :height 1.1))))
 )
#+end_src

** Keybindings

#+begin_src emacs-lisp
(define-key global-map (kbd "M-c") 'capitalize-dwim)
(define-key global-map (kbd "M-u") 'upcase-dwim)
(define-key global-map (kbd "M-l") 'downcase-dwim)
#+end_src

** Extensions

*** Org Bullets

#+begin_src emacs-lisp
(add-hook 'org-mode-hook (lambda () (org-bullets-mode 1)))
#+end_src

* Notes
Whenever you reconfigure a package, make sure to wrap your config in an `after!'
block, otherwise Doom's defaults may override your settings. E.g.

  (after! PACKAGE
    (setq x y))

The exceptions to this rule:

  - Setting file/directory variables (like `org-directory')
  - Setting variables which explicitly tell you to set them before their package
    is loaded (see 'C-h v VARIABLE' to look up their documentation).
  - Setting doom variables (which start with 'doom-' or '+').

Here are some additional functions/macros that will help you configure Doom.

- `load!' for loading external *.el files relative to this one
- `use-package!' for configuring packages
- `after!' for running code after a package has loaded
- `add-load-path!' for adding directories to the `load-path', relative to this
  file. Emacs searches the `load-path' when you load packages with `require' or
  `use-package'.
- `map!' for binding new keys

To get information about any of these functions/macros, move the cursor over the
highlighted symbol at press 'K' (non-evil users must press 'C-c c k'). This will
open documentation for it, including demos of how they are used. Alternatively,
use `C-h o' to look up a symbol (functions, variables, faces, etc).

You can also try 'gd' (or 'C-c c d') to jump to their definition and see how
they are implemented.
